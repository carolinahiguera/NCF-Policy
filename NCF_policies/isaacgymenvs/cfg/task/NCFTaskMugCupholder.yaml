# See schema in factory_schema_config_task.py for descriptions of common parameters.

defaults:
    - FactoryBase
    - _self_
    # - /factory_schema_config_task

name: NCFTaskMugCupholder
physics_engine: ${..physics_engine}

sim:
    disable_gravity: True
    sim_digits: True

env:
    numEnvs: ${resolve_default:128,${...num_envs}}
    numObservations: 21 # 14 + 64 (ee+cupholder+digits)
    numActions: 6

    num_gripper_move_sim_steps: 40  # number of timesteps to reserve for moving gripper before first step of episode
    num_gripper_close_sim_steps: 50  # number of timesteps to reserve for closing gripper onto nut during each reset
    
randomize:
    franka_arm_initial_dof_pos: [0.00871, -0.10368, -0.00794, -1.49139, -0.00083,  1.38774,  0.7861]
    fingertip_midpoint_pos_initial: [0.0, 0.0, 0.2]  # initial position of midpoint between fingertips above table
    fingertip_midpoint_pos_noise: [0.1, 0.1, 0.05]  # noise on fingertip pos
    fingertip_midpoint_rot_initial: [3.1416, 0, 3.1416]  # initial rotation of fingertips (Euler)
    fingertip_midpoint_rot_noise: [0.3, 0.3, 1]  # noise on rotation
    nut_noise_pos_in_gripper: [0.0, 0.0, 0.01]  # noise on nut position within gripper
    nut_noise_rot_in_gripper: 0.17  # noise on nut rotation within gripper
    bolt_pos_xy_initial: [0.0, 0.0]  # initial XY position of nut on table
    bolt_pos_xy_noise: [0.0, 0.0]  # noise on nut position
    bolt_pos_z_offset: 0.00
    # add noise to nut
    # nut_noise_pos_in_gripper: [0.005, 0.005, 0.01]  # noise on nut position within gripper
    # nut_noise_rot_in_gripper: 0.26  # noise on nut rotation within gripper
    # bolt_pos_xy_initial: [0.0, 0.0]  # initial XY position of nut on table
    # bolt_pos_xy_noise: [0.1, 0.1]  # noise on nut position

ncf:
    digits_seq_length: 1
    digits_size: 64
    ncf_arch: "mlp" # "transformer"
    ncf_epoch: 19
    
    # checkpoint_vae: "/media/chiguera/2TB/NCFgym/IsaacGymEnvs/algo/ncf/digit_vae/checkpoints/vae_final.pt"
    # checkpoint_vae: "checkpoints/digit_vae.ckpt"
    # checkpoint_ncf: "checkpoints/ncf"
    # checkpoint_ndf: "checkpoints/ndf_demo_mug_weights.pth"

    # checkpoint_vae: "checkpoints/digit_vae/digit_vae.ckpt"
    # checkpoint_ncf: "checkpoints/ncf"
    # checkpoint_ndf: "checkpoints/ndf_demo_mug_weights.pth"

    checkpoint_vae: "checkpoints_all/digit_vae/digit_vae.ckpt"
    checkpoint_ncf: "checkpoints_all/ncf"
    checkpoint_ndf: "checkpoints_all/ndf.pth"

    path_mesh_object: "NCF_policies/assets/factory/mesh/ncf_mug_cupholder/obj_assets/1/obj_collision.obj"
    path_pointcloud_object: "NCF_policies/assets/factory/mesh/ncf_mug_cupholder/obj_assets/1/obj_pointcloud.npy"
    path_mesh_cupholder: "NCF_policies/assets/factory/mesh/ncf_mug_cupholder/cupholder/cupholder_v2.obj"
    path_ndf_code_object: "NCF_policies/assets/factory/mesh/ncf_mug_cupholder/obj_assets/1/obj_ndf_code.npy"

rl:
    pos_action_scale: [0.03, 0.03, 0.02]
    rot_action_scale: [0.1, 0.1, 0.1]
    force_action_scale: [1.0, 1.0, 1.0]
    torque_action_scale: [1.0, 1.0, 1.0]

    clamp_rot: True
    clamp_rot_thresh: 1.0e-6

    add_obs_bolt_tip_pos: False  # add observation of bolt tip position
    reduce_obs: True
    use_keypoints_rew: True

    num_keypoints: 4  # number of keypoints used in reward
    keypoint_scale: 0.05  # length of line of keypoints

    keypoint_reward_scale: 1.0  # scale on keypoint-based reward
    action_penalty_scale: 0.0  # scale on action penalty
    orientation_penalty_scale: 0.0 # scale on orientation penalty
    dist_penalty_scale: 0.0

    max_episode_length: 250

    close_error_thresh: 0.02  # threshold below which nut is considered close enough to bolt
    away_error_thresh: 0.30  # threshold above which nut is considered too far from bolt
    success_bonus: 0.0  # bonus if nut is close enough to bolt

    compute_contact_gt: False  # compute ground truth contact info
    world_ref_pointcloud: True

    log_ncf_data: False  # log data for NCF training
    path_save_ncf_data: "/home/chiguera/Documents/NCF/ncf_cupholder_dataset/data_isaacgym/"
    debug_viz: False

ctrl:
    ctrl_type: joint_space_id  # {gym_default,
                               #  joint_space_ik, joint_space_id, 
                               #  task_space_impedance, operational_space_motion, 
                               #  open_loop_force, closed_loop_force,
                               #  hybrid_force_motion}
    all:
        jacobian_type: geometric
        gripper_prop_gains: [100, 100]
        gripper_deriv_gains: [2, 2]
    gym_default:
        ik_method: dls
        joint_prop_gains: [40, 40, 40, 40, 40, 40, 40]
        joint_deriv_gains: [8, 8, 8, 8, 8, 8, 8]
        # joint_prop_gains: [7000, 7000, 7000, 7000, 7000, 7000, 7000]
        # joint_deriv_gains: [50, 50, 50, 50, 50, 50, 50]
        gripper_prop_gains: [500, 500]
        gripper_deriv_gains: [20, 20]
    joint_space_ik:
        ik_method: dls
        joint_prop_gains: [1, 1, 1, 1, 1, 1, 1]
        joint_deriv_gains: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    joint_space_id:
        ik_method: dls
        joint_prop_gains: [40, 40, 40, 40, 40, 40, 40]
        joint_deriv_gains: [8, 8, 8, 8, 8, 8, 8]
    task_space_impedance:
        motion_ctrl_axes: [1, 1, 1, 1, 1, 1]
        task_prop_gains: [40, 40, 40, 40, 40, 40]
        task_deriv_gains: [8, 8, 8, 8, 8, 8]
    operational_space_motion:
        motion_ctrl_axes: [1, 1, 1, 1, 1, 1]
        task_prop_gains: [1, 1, 1, 1, 1, 1]
        task_deriv_gains: [1, 1, 1, 1, 1, 1]
    open_loop_force:
        force_ctrl_axes: [0, 0, 1, 0, 0, 0]
    closed_loop_force:
        force_ctrl_axes: [0, 0, 1, 0, 0, 0]
        wrench_prop_gains: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
    hybrid_force_motion:
        motion_ctrl_axes: [1, 1, 0, 1, 1, 1]
        task_prop_gains: [40, 40, 40, 40, 40, 40]
        task_deriv_gains: [8, 8, 8, 8, 8, 8]
        force_ctrl_axes: [0, 0, 1, 0, 0, 0]
        wrench_prop_gains: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

